# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/gentoo"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  config.vm.provider "virtualbox" do |vb|
     vb.memory = "2048"
     vb.cpus = "1"
     vb.customize ["modifyvm", :id, "--audio", "none"]
    #vb.customize ["sharedfolder", "add", :id, "--name", "vagrant", "--hostpath", "/home/user/tmp/share", "--automount" ]
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo emerge app-misc/tmux app-misc/mc net-analyzer/mtr sys-process/htop
    sudo emerge media-gfx/wkhtmltopdf dev-vcs/git dev-db/redis

    #echo "PHP_TARGETS=\"php7-2\"" | sudo tee -a /etc/portage/make.conf
    echo "USE_PHP=\"zip zlib mysql mysqli pdo phar session\"" | sudo tee -a /etc/portage/make.conf
    sudo emerge dev-lang/php dev-php/xdebug
    
    #eselect php list cli

    sudo emerge www-servers/apache
    echo "USE=\"apache2\"" | sudo tee -a /etc/portage/make.conf    
    sudo emerge --changed-use --deep @world
    
    sed -e "s|APACHE2_OPTS=\"|APACHE2_OPTS=\"-D PHP|" /etc/conf.d/apache2 | sudo tee /etc/conf.d/apache2;
    #sudo chown apache:apache /var/www/sitename
    
    sudo rc-update add apache2 default
    sudo /etc/init.d/apache2 start
    #netstat -tulpen | grep apache

    sudo emerge emerge dev-db/mysql
    sudo /etc/init.d/mysql start
    sudo rc-update add mysql default
    /usr/bin/mysqladmin -u root -h localhost password 'root'

  SHELL
end
